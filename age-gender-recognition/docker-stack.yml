version: '3.3'
volumes: 
  face:
  shared-images:
networks:
  rrp-net:
    external: true
services:
  # cv face recognition
  # RabbitMQ
  rabbit-server:
    image: rabbitmq:3.7    
    logging:
      options: {max-file: '5', max-size: 1000m}
      driver: "none"
    networks:
      rrp-net:
        aliases: [rabbit-host]
    ports: ['5672:5672']
  # # USB rtsp streamer service
  usb-rtsp:
    image: docker:19.03.1
    entrypoint: [sh, -c]
    environment:
      TASK_NAME: '{{.Task.Name}}'
    command: >-
      'exec docker run
      --interactive
      --name  usb-rtsp
      -e RTSP_RESOLUTION="640x480"
      -e RTSP_FRAMERATE=15
      -e INPUT="/dev/video0"
      --label com.docker.stack.namespace=$$(docker container inspect --format "{{index .Config.Labels \"com.docker.stack.namespace\"}}" $${TASK_NAME})
      --network=rrp-net 
      -p 8554:8554
      --device "/dev/video0"
      --rm 
      -v /var/log:/var/log 
      -v /var/run/:/var/run/ 
      -v /usr/bin/docker:/usr/bin/docker
      ullaakut/rtspatt:1.3.2'
    volumes:
      - /var/run:/var/run
    deploy:
      mode: global
      placement:
        constraints: 
          - node.labels.age-gender == true
# --device=/dev/video0 --rm -e RTSP_RESOLUTION=640x480 -e RTSP_FRAMERATE=15 -e INPUT=/dev/video0 -p 8554:8554 ullaakut/rtspatt:1.3.2
  age-gender:
    image: docker:19.03.1
    entrypoint: [sh, -c]
    environment:
      TASK_NAME: '{{.Task.Name}}'
    command: >-
      'exec docker run
      --interactive
      --name age-gender
      --label com.docker.stack.namespace=$$(docker container inspect --format "{{index .Config.Labels \"com.docker.stack.namespace\"}}" $${TASK_NAME})
      --network=rrp-net
      -p 8090:8090 
      --device /dev/dri
      -v face:/data
      --rm
      -v /var/log:/var/log 
      -v /var/run/:/var/run/ 
      -v /usr/bin/docker:/usr/bin/docker
      registry.ori.adsdcsp.com/edge/age-gender:demo -d_fr GPU -d_ag GPU -n_ag 30 s_fd 50 -servicename service1 -rabbithost rabbit-host:5672 -streampath rtsp://usb-rtsp:8554/live.sdp -datapath /data/facedb -serialnumber 1'
    volumes:
      - /var/run:/var/run
    deploy:
      mode: global
      placement:
        constraints: 
          - node.labels.age-gender == true
  # Service that determins the ad to show
  content-delivery-tpa:
    image:  registry.ori.adsdcsp.com/edge/cv-content-delivery-tpa:demo
    command: ["-rabbitHost","rabbit-host:5672","-cv-orchestrator-url","http://cv-orchestrator:3005"]
    networks:
      rrp-net: 
    restart: always        
    deploy:
      mode: global
      placement:
        constraints: 
          - node.labels.age-gender == true
  # service that shows the ad
  cv-orchestrator:
    image: docker:19.03.1
    entrypoint: [sh, -c]
    environment:
      TASK_NAME: '{{.Task.Name}}'
    command: >-
      'exec docker run
      --interactive
      --name cv-orchestrator
      -p 3005:3005
      --privileged=true
      --env PORT=3005
      --env streamerurl=http://age-gender:8090/stream.mjpeg
      --label com.docker.stack.namespace=$$(docker container inspect --format "{{index .Config.Labels \"com.docker.stack.namespace\"}}" $${TASK_NAME})
      --network=rrp-net
      --rm
      -v /var/log:/var/log 
      -v /var/run/:/var/run/ 
      -v /usr/bin/docker:/usr/bin/docker
      registry.ori.adsdcsp.com/edge/cv-orchestrator:demo'
    volumes:
      - /var/run:/var/run
    deploy:
      mode: global
      placement:
        constraints: 
          - node.labels.age-gender == true